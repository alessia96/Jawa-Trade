<?xml version="1.0" encoding="UTF-8"?><testrun name="TradingExchangeTest" project="JawaTrade" tests="18" started="18" failures="1" errors="0" ignored="0">
  <testsuite name="TradingExchangeTest" time="0.15">
    <testcase name="testGetAndSetCurrentClient" classname="TradingExchangeTest" time="0.0"/>
    <testcase name="testGetTraders" classname="TradingExchangeTest" time="0.0"/>
    <testcase name="testGetDate" classname="TradingExchangeTest" time="0.0"/>
    <testcase name="testGetTime" classname="TradingExchangeTest" time="0.0"/>
    <testcase name="testGetCompanies" classname="TradingExchangeTest" time="0.0"/>
    <testcase name="testGetShareIndex" classname="TradingExchangeTest" time="0.0"/>
    <testcase name="testIsCompanyTradeable" classname="TradingExchangeTest" time="0.0"/>
    <testcase name="testUpdateShareIndex" classname="TradingExchangeTest" time="0.063">
      <failure>java.lang.AssertionError: Values should be different. Actual: 2.395&#13;
	at org.junit.Assert.fail(Assert.java:88)&#13;
	at org.junit.Assert.failEquals(Assert.java:185)&#13;
	at org.junit.Assert.assertNotEquals(Assert.java:230)&#13;
	at org.junit.Assert.assertNotEquals(Assert.java:247)&#13;
	at TradingExchangeTest.testUpdateShareIndex(TradingExchangeTest.java:165)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testSetUpCompanies" classname="TradingExchangeTest" time="0.005"/>
    <testcase name="testMarketStatus" classname="TradingExchangeTest" time="0.007"/>
    <testcase name="testGetEvents" classname="TradingExchangeTest" time="0.005"/>
    <testcase name="testUpdateDateTime" classname="TradingExchangeTest" time="0.011"/>
    <testcase name="testGetXChart" classname="TradingExchangeTest" time="0.019"/>
    <testcase name="testSetUpClients" classname="TradingExchangeTest" time="0.01"/>
    <testcase name="testCheckEndEvent" classname="TradingExchangeTest" time="0.008"/>
    <testcase name="testIsMarketClosed" classname="TradingExchangeTest" time="0.005"/>
    <testcase name="testSetUpEvents" classname="TradingExchangeTest" time="0.01"/>
    <testcase name="testGetSmartTrader" classname="TradingExchangeTest" time="0.001"/>
  </testsuite>
</testrun>
